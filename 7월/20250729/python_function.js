// 기본 함수와 Type Hint
/* 
    Java에서는 함수 선언 시 function 키워드를 사용하지만 파이썬에서는 def 키워드를 선언한다.
    또한 파라미터에 Type Hint를 적음으로써 각각의 파라미터가 어떤 타입인지를 알려준다.
    하지만 기입한 타입으로 파라미터를 넘겨주지 않아도 에러는 발생하지 않을정도로 영향력은 없다.
    그럼에도 불구하고 사용하는 이유는 직관적으로 어떤 타입의 값을 파라미터로 넘기는 지 확인하기 위해서 사용된다.
    또한 기본값 설정도 가능하다.
    그 외에도 함수 내부에 """ """ 를 사용하여 함수에 대한 설명문인 docstring을 기입할 수 있다.
    
    ex)
    def create_greeting(name : str, age : int = 20) -> str :   
        """ 이 함수는 이름과 나이를 받아 인사말을 생성합니다. """ 
        return f"안녕하세요, {age}세 {name}님"
*/

// 함수 호출
/* 
    함수 호출 방법은 크게 2가지가 있다. 위치 인자 전달과 키워드 인자 전달 방식이 있다.
    위치 인자 전달은 함수 선언시 지정한 파라미터 순서 그대로 파라미터를 전달하여 함수를 호출하는 방식이다.

    ex)
    print(create_greeting("홍길동", 30))

    두 번째로 키워드 인자 전달 방식은 파라미터 순서를 무작위로 하되 키워드를 직접 입력하여 전달하는 방식이다.
    즉, key-value 형식으로 파라미터를 전달하여 순서가 바뀌어도 각각의 값이 어떤 파라미터와 연결되는지를 알려주는 방식이다.
    
    ex)
    print(create_greeting(age = 45, name = "신사임당")) 

    ++)
    추가적으로 기본값으로 설정된 파라미터가 있을 경우에는 인자 전달을 생략할 수 있다.
    그 경우에는 설정된 기본값으로 출력되기 때문이다.

    ex)
    print(create_greeting("유관순")) 
*/

// 가변 인자(*args)와 키워드 가변 인자(*kwargs)
/* 
    파이썬에서의 가변인자와 키워드 가변 인자는 함수에 넘겨줄 수 있는 인자 개수가 유동적일 대 사용하는 문법이다.

    가변인자(*args)
    *args는 위치 기반 인자를 튜플로 받는다. 몇 개가 인자로 들어올지 알 수 없기 때문에 튜플 형태로 전달된다.
    *는 '나머지를 다 모아서'란 의히이다.
    *args에서 튜플(tuple)이란 여러 개의 값을 하나로 묶은 순서 있는 변경 불가한 자료형을 말한다.
    즉, 리스트처럼 여러 값을 하나의 변수에 담을 수 있다. 
    하지만 한 번 정하면 값을 바꿀 수 없는 불변의 특성을 가지고 있으며 소괄호()로 감싸서 표현한다.

    ex)
    def example(*args):
        print(args)
    example(1, 2, 3)
    # 출력: (1, 2, 3)

    키워드 가변 인자(**kwargs)
    **kwargs는 이름 붙은 인자를 딕셔너리로 받는다. 
    이 때도 몇 개가 들어올지 모르기 때문에 dict 형태로 전달된다.
    **는 '나머지를 다 key-value 형식으로 모아서'라는 의미이다.

    ex)
    def example(**kwargs):
        print(kwargs)
    example(a=1, b=2)
    # 출력: {'a': 1, 'b': 2}
*/

// 튜플(tuple)과 리스트(list) 차이
/* 
    튜플과 리스트는 둘 다 여러 개의 값을 하나의 변수에 담을 수 있다는 공통점을 가지고 있다.
    하지만 튜플은 소괄호()로 감싸서 사용하며 불변의 특성을 가지고 있어 고정된 값을 저장할 때 사용한다. 
    그렇기에 성능이 비교적 빠르다는 장점이 있다.
    반면 리스트는 대괄호[]로 감싸서 사용하며 가변의 특성이 있어 값 변경이 필요한 경우 사용된다.
    그렇기에 비교적 속도가 느리다는 단점이 있다.
*/